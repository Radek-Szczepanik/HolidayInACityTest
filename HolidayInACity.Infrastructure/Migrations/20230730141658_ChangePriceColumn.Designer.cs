// <auto-generated />
using System;
using HolidayInACity.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HolidayInACity.Infrastructure.Migrations
{
    [DbContext(typeof(HolidayInACityDbContext))]
    [Migration("20230730141658_ChangePriceColumn")]
    partial class ChangePriceColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HolidayInACity.Domain.Entities.EventOrganizer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EventOrganizers");
                });

            modelBuilder.Entity("HolidayInACity.Domain.Entities.EventOrganizerAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("EventOrganizerId")
                        .HasColumnType("int");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("EventOrganizerId")
                        .IsUnique();

                    b.ToTable("EventOrganizerAddresses");
                });

            modelBuilder.Entity("HolidayInACity.Domain.Entities.EventOrganizerContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EventOrganizerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EventOrganizerId")
                        .IsUnique();

                    b.ToTable("EventOrganizerContacts");
                });

            modelBuilder.Entity("HolidayInACity.Domain.Entities.HolidayEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventOrganizerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EventOrganizerId");

                    b.ToTable("HolidayEvents");
                });

            modelBuilder.Entity("HolidayInACity.Domain.Entities.EventOrganizerAddress", b =>
                {
                    b.HasOne("HolidayInACity.Domain.Entities.EventOrganizer", "EventOrganizer")
                        .WithOne("EventOrganizerAddresses")
                        .HasForeignKey("HolidayInACity.Domain.Entities.EventOrganizerAddress", "EventOrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventOrganizer");
                });

            modelBuilder.Entity("HolidayInACity.Domain.Entities.EventOrganizerContact", b =>
                {
                    b.HasOne("HolidayInACity.Domain.Entities.EventOrganizer", "EventOrganizer")
                        .WithOne("EventOrganizerContacts")
                        .HasForeignKey("HolidayInACity.Domain.Entities.EventOrganizerContact", "EventOrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventOrganizer");
                });

            modelBuilder.Entity("HolidayInACity.Domain.Entities.HolidayEvent", b =>
                {
                    b.HasOne("HolidayInACity.Domain.Entities.EventOrganizer", "EventOrganizer")
                        .WithMany("HolidayEvents")
                        .HasForeignKey("EventOrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventOrganizer");
                });

            modelBuilder.Entity("HolidayInACity.Domain.Entities.EventOrganizer", b =>
                {
                    b.Navigation("EventOrganizerAddresses")
                        .IsRequired();

                    b.Navigation("EventOrganizerContacts")
                        .IsRequired();

                    b.Navigation("HolidayEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
